{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2020-07-20T05:43:28.598Z",
    "end": "2020-07-20T05:43:29.893Z",
    "duration": 1295,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "00439d6a-b224-4680-b7fd-0016356a2155",
      "title": "",
      "fullFile": "cypress/integration/experimenteditTestCase.spec.js",
      "file": "cypress/integration/experimenteditTestCase.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bb734883-db5d-4b6f-9304-ca9b851969a6",
          "title": "testing auth",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "test case 4 - EDIT a new Random Bill",
              "fullTitle": "testing auth test case 4 - EDIT a new Random Bill",
              "timedOut": null,
              "duration": 1248,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.authenticateSession().then(function (response) {\n  var fakeBillPayload = billHelpers.createRandomBillPayload(); //POST request to create a Bill\n  cy.request({\n    method: \"PUT\",\n    url: 'http://localhost:3000/api/bill/2',\n    headers: {\n      'X-User-Auth': JSON.stringify(Cypress.env().loginToken),\n      'Content-Type': 'application/json'\n    },\n    body: fakeBillPayload\n  }).then(function (response) {\n    var responseAsString = JSON.stringify(response); //expect(responseAsString).to.have.string(fakeBillPayload.value)\n  }); // GET request to fetch all bills \n  cy.request({\n    method: \"GET\",\n    url: 'http://localhost:3000/api/bills',\n    headers: {\n      'X-User-Auth': JSON.stringify(Cypress.env().loginToken),\n      'Content-Type': 'application/json'\n    }\n  }).then(function (response) {\n    var responseAsString = JSON.stringify(response); //expect(responseAsString).to.have.string(fakeBillPayload.value)\n    //expect(responseAsString).to.have.string(fakeBillPayload.paid)\n  });\n});",
              "err": {},
              "uuid": "bf94007c-6a52-4013-afa6-440f0e041dd0",
              "parentUUID": "bb734883-db5d-4b6f-9304-ca9b851969a6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bf94007c-6a52-4013-afa6-440f0e041dd0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1248,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": {},
      "version": "5.1.0"
    }
  }
}